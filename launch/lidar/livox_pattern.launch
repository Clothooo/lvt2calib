<launch>
  <!-- <param name="use_sim_time" value="true"/> -->
  <param name="use_sim_time" value="false"/>
  <param name="do_acc_boards" type="bool" value="false"/>
  <param name="pause_process" type="bool" value="false"/>
  <param name="end_process" type="bool" value="false"/>
  <param name="livox_paused" type="bool" value="false"/>

  <!-- <param name="max_frame" type="int" value="10" default="60"/> -->

  <arg name="stdout" default="screen"/>
  <arg name="cloud_tp" default="/livox/lidar"/>
  <arg name="use_RG_Pseg" default="false"/>
  <arg name="use_passthrough_preprocess" default="false"/>
  <arg name="ns_" default="livox"/>

  <group ns="$(arg ns_)">
    <group if="$(arg use_passthrough_preprocess)">
      <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="$(arg stdout)"/>

      <node pkg="nodelet" type="nodelet" name="pass_through_x" args="load pcl/PassThrough pcl_manager" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)" />
        <remap from="~output" to="$(arg cloud_tp)/x_filtered" />
        <rosparam>
          filter_field_name: x
          filter_limit_min: 0
          filter_limit_max: 10
          filter_limit_negative: False
          max_queue_size: 1
          keep_organized: False
        </rosparam>
      </node>

      <node pkg="nodelet" type="nodelet" name="pass_through_y" args="load pcl/PassThrough pcl_manager" output="$(arg stdout)">
        <remap from="~input" to="$(arg cloud_tp)/x_filtered" />
        <remap from="~output" to="$(arg cloud_tp)/y_filtered" />
        <rosparam>
          filter_field_name: y
          filter_limit_min: -5
          filter_limit_max: 5

          filter_limit_negative: False
          max_queue_size: 1
          keep_organized: False
        </rosparam>
      </node>
    </group>
    
    <node pkg="lvt2calib" type="livox_pattern" name="laser_pattern" output="screen">
      <remap from="~cloud_laser" to="$(arg cloud_tp)/y_filtered" if="$(arg use_passthrough_preprocess)"/>
      <remap from="~cloud_laser" to="$(arg cloud_tp)" unless="$(arg use_passthrough_preprocess)"/>

      <param name="model_path" type="string" value="$(find lvt2calib)/data/template_pcl/four_circle_boundary.pcd"/>
    
      <param name="is_gazebo" type="bool" value="false"/>

      <param name="use_vox_filter" type="bool" value="true"/>
      <param name="use_gauss_filter" type="bool" value="true"/>
      <param name="use_statistic_filter" type="bool" value="false"/>
      <param name="use_i_filter" type="bool" value="true"/>
      <param name="use_gauss_filter2" type="bool" value="true"/>
      <param name="queue_size" type="int" value="2"/>
      <param name="use_RG_Pseg" type="bool" value="$(arg use_RG_Pseg)"/>
      <param name="ns" type="string" value="$(arg ns_)"/>

      <rosparam>
        <!-- x_passthrough_filter: Remove the refelction noise produced by Livox. No need to be edit if unnecessary. -->
        remove_x_min: -1.0
        remove_x_max: 1.0

        <!-- voxel filterï¼šuse VoxelGrid to downsample and uniform the point cloud. -->
        voxel_grid_size: 0.01

        <!-- gauss filter: gaussian filter, used in automatic detection of the calibration board. -->
        gauss_k_sigma: 3
        gauss_k_thre_rt_sigma: 3
        gauss_k_thre: 0.05
        gauss_conv_radius: 0.02
        
        <!-- cluster: do cluster before the plane segmentation. -->
        cluster_tole: 0.05
        <!-- 0.05 ~ 0.10 -->
        cluster_size_min: 0.01
        cluster_size_max: 20

        <!-- plane segmentation -->
        Pseg_dis_thre: 0.02
        Pseg_iter_num: 1000
        Pseg_size_min: 0.1
        
        <!-- RG plane segmentation -->
        RG_smooth_thre_deg: 5
        RG_curve_thre: 0.1
        RG_neighbor_n: 30
        
        <!-- statistic filter -->
        sor_MeanK: 10
        sor_StddevMulThresh: 1

        <!-- intensity filter -->         
        i_filter_out_min: 0.0
        i_filter_out_max: 30.0
        <!-- 20 ~ 50 -->

        <!-- boundary estimation: to estimate the surface boundary based on the normal estimation -->
        boundEstRad: 30
        normEstRad: 50

        <!-- template matching criterion -->
        rmse_ukn2tpl_thre: 0.04
        <!-- 0.03 ~ 0.05 -->
        rmse_tpl2ukn_thre: 0.03
        <!-- 0.03 ~ 0.05 -->

        <!-- center extraction: based on circle extraction -->
        circle_radius: 0.12
        circle_seg_thre: 0.02
        centroid_dis_min: 0.15
        centroid_dis_max: 0.25
        min_centers_found: 4

        <!-- gause filter2: used to smooth the accumulated calibration board point cloud.  -->    
        gauss_k_sigma2: 3
        gauss_k_thre_rt_sigma2: 3
        gauss_k_thre2: 0.05
        gauss_conv_radius2: 0.02

      </rosparam>

    </node>

    <!-- <node type="rviz" name="rviz_livox" pkg="rviz" args="-d $(find lvt2calib)/rviz/livox_pattern.rviz" /> -->
    <node type="rviz" name="rviz_livox" pkg="rviz" args="-d $(find lvt2calib)/rviz/$(arg ns_)_pattern.rviz" />

  </group>

</launch>
